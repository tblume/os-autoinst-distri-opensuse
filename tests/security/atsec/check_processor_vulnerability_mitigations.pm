# SUSE's openQA tests
#
# Copyright 2022 SUSE LLC
# SPDX-License-Identifier: FSFAP
#
# Summary: Run 'Check for processor vulnerability mitigations' test case of ATSec test suite
# Maintainer: QE Security <none@suse.de>
# Tags: poo#111809

use base 'consoletest';
use strict;
use warnings;
use testapi;
use utils;
use atsec_test;
use Utils::Architectures;

sub run {
    my ($self) = shift;

    select_console 'root-console';

    my $script = 'spectre-meltdown-checker.sh';
    my $log_file = 'spectre-meltdown-checker.log';

    # Get the latest test script, if fails, use the file in gitlab
    if (script_run('wget https://meltdown.ovh -O spectre-meltdown-checker.sh') != 0) {
        record_info("Fail to get the latest $script", 'We will use the test script which we stored before', result => 'fail');
        assert_script_run("cd $atsec_test::code_dir/pentest/cpu-vul");
    }

    # Run the test script
    script_run("sh $script --no-color > $log_file 2>&1", timeout => 180);

    upload_logs($log_file);

    my $summary = script_output("grep 'SUMMARY' $log_file");
    record_info('SUMMARY', $summary);

    foreach my $item (split(/\s/, $summary)) {
        if ($item !~ /(^CVE-.*):(\w+)/) {
            next;
        }
        my $name = $1;
        my $result = $2;
        if ($result ne 'OK') {
            record_info($name, "Check failed: $item, please see $log_file for more details", result => 'fail');

            # CVE-2018-3639 will be KO on aarch64 OSD worker.
            # The reason is CPU doesn't support SSBD.
            # In this case, we consider job pass
            $self->result('fail') unless (is_aarch64 && $name eq 'CVE-2018-3639');
            next;
        }
        record_info($name, $item);
    }

}

1;
